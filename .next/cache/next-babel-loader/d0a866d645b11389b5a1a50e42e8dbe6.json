{"ast":null,"code":"var _jsxFileName = \"/Users/nigel/Documents/Projects/drupal/universal/universal-web-component/src/components/Blockquote/Blockquote.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nimport theme from \"styled-theming\";\nconst blockColors = theme.variants(\"mode\", \"variant\", {\n  default: {\n    color: \"#82BFE0\"\n  },\n  primary: {\n    color: \"#d0245a\"\n  },\n  cta: {\n    color: \"#237c7e\"\n  }\n});\nconst BlockquoteContent = styled.blockquote.withConfig({\n  displayName: \"Blockquote__BlockquoteContent\",\n  componentId: \"sc-1sdx0kz-0\"\n})([\"color:\", \";float:left;font-size:42px;font-style:italic;line-height:42px;margin:10px auto;text-align:center;width:calc(100% - 40px);&:after{content:'\\\"'; } &:before { content: '\\\"';}\"], blockColors);\n_c = BlockquoteContent;\n\nconst Blockquote = props => {\n  let curContent;\n\n  if (props.children) {\n    curContent = __jsx(React.Fragment, null, props.children);\n  } else {\n    curContent = __jsx(React.Fragment, null, props.content);\n  }\n\n  return __jsx(BlockquoteContent, {\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }\n  }, curContent);\n};\n\n_c2 = Blockquote;\nBlockquote.defaultProps = {\n  content: \"Blockquote content\",\n  variant: \"default\"\n};\nexport default Blockquote;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BlockquoteContent\");\n$RefreshReg$(_c2, \"Blockquote\");","map":{"version":3,"sources":["/Users/nigel/Documents/Projects/drupal/universal/universal-web-component/src/components/Blockquote/Blockquote.tsx"],"names":["React","styled","theme","blockColors","variants","default","color","primary","cta","BlockquoteContent","blockquote","Blockquote","props","curContent","children","content","defaultProps","variant"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAUA,MAAMC,WAAW,GAAGD,KAAK,CAACE,QAAN,CAAe,MAAf,EAAuB,SAAvB,EAAkC;AAClDC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAK,EAAE;AAAR,GADyC;AAElDC,EAAAA,OAAO,EAAE;AAACD,IAAAA,KAAK,EAAE;AAAR,GAFyC;AAGlDE,EAAAA,GAAG,EAAE;AAACF,IAAAA,KAAK,EAAE;AAAR;AAH6C,CAAlC,CAApB;AAMA,MAAMG,iBAAiB,GAAGR,MAAM,CAACS,UAAV;AAAA;AAAA;AAAA,8LACVP,WADU,CAAvB;KAAMM,iB;;AAkBN,MAAME,UAAU,GAAIC,KAAD,IAA4B;AAC3C,MAAIC,UAAJ;;AACI,MAAID,KAAK,CAACE,QAAV,EAAoB;AAChBD,IAAAA,UAAU,GAAG,4BAAGD,KAAK,CAACE,QAAT,CAAb;AACH,GAFD,MAEO;AACHD,IAAAA,UAAU,GAAG,4BAAGD,KAAK,CAACG,OAAT,CAAb;AACH;;AAEL,SAAO,MAAC,iBAAD;AAAmB,IAAA,OAAO,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCF,UAAtC,CAAP;AACH,CATD;;MAAMF,U;AAWNA,UAAU,CAACK,YAAX,GAA0B;AACtBD,EAAAA,OAAO,EAAE,oBADa;AAEtBE,EAAAA,OAAO,EAAE;AAFa,CAA1B;AAKA,eAAeN,UAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport theme from \"styled-theming\";\n\ntype Variants = \"default\" | \"primary\" | \"cta\"\n\ntype blockQuoteProps = {\n    content?: string\n    children?: string\n    variant?: Variants\n}\n\nconst blockColors = theme.variants(\"mode\", \"variant\", {\n    default: {color: \"#82BFE0\"},\n    primary: {color: \"#d0245a\"},\n    cta: {color: \"#237c7e\"}\n});\n\nconst BlockquoteContent = styled.blockquote<blockQuoteProps>`\n    color: ${blockColors};\n    float: left;\n    font-size: 42px;\n    font-style: italic;\n    line-height: 42px;\n    margin: 10px auto;\n    text-align: center;\n    width: calc(100% - 40px);\n    \n    &:after {\n        content: '\"';\n    }\n    &:before {\n        content: '\"';\n    }\n`;\n\nconst Blockquote = (props: blockQuoteProps) => {\n    let curContent;\n        if (props.children) {\n            curContent = <>{props.children}</>;\n        } else {\n            curContent = <>{props.content}</>;\n        }\n\n    return <BlockquoteContent variant=\"primary\">{curContent}</BlockquoteContent>\n};\n\nBlockquote.defaultProps = {\n    content: \"Blockquote content\",\n    variant: \"default\"\n};\n\nexport default Blockquote;"]},"metadata":{},"sourceType":"module"}