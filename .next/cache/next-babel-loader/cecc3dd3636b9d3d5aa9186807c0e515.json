{"ast":null,"code":"var _jsxFileName = \"/Users/nigel/Documents/Projects/drupal/universal/universal-web-component/src/components/InputField/InputField.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nconst Input = styled.input.withConfig({\n  displayName: \"InputField__Input\",\n  componentId: \"sc-3hn3ct-0\"\n})([\"border:1px solid #eee;border-radius:3px;font-size:16px;margin:10px 0;padding:10px 5px;outline:none;width:250px;\"]);\n_c = Input;\n\nconst InputField = props => {\n  _s();\n\n  const {\n    0: input,\n    1: setInput\n  } = useState('');\n\n  const handleChange = e => {\n    setInput(e.target.value);\n\n    if (e.target.value.length == 20) {\n      console.log(\"almost reaching limit\");\n    }\n  };\n\n  const handleBlur = () => {}; //     const value = e.target.value;\n  //     // Allow for an empty field \n  //     if (value == '') {\n  //         setQty('');\n  //     }\n  //     // Allow anything >= 1\n  //     if (parseInt(value) >= 1){\n  //         setQty(parseInt(value));\n  //     }\n  // };\n  //\n  // // Set qty back when leaving an empty field\n  // const handleBlur = () => {\n  //     if (!qty) {\n  //         setQty(initialQty);\n  //     }\n  // };\n\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }\n  }, __jsx(Input, {\n    name: props.name,\n    value: input,\n    type: props.type,\n    placeholder: props.placeholder,\n    onChange: e => handleChange(e),\n    onBlur: () => handleBlur(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, input));\n};\n\n_s(InputField, \"WVveI0ACa0LqOSOlGzu58xcz+KE=\");\n\n_c2 = InputField;\nInputField.defaultProps = {\n  name: 'input name',\n  type: 'name',\n  placeholder: 'Name'\n};\nexport default InputField;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Input\");\n$RefreshReg$(_c2, \"InputField\");","map":{"version":3,"sources":["/Users/nigel/Documents/Projects/drupal/universal/universal-web-component/src/components/InputField/InputField.tsx"],"names":["React","useState","styled","Input","input","InputField","props","setInput","handleChange","e","target","value","length","console","log","handleBlur","name","type","placeholder","defaultProps"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAUA,MAAMC,KAAK,GAAGD,MAAM,CAACE,KAAV;AAAA;AAAA;AAAA,uHAAX;KAAMD,K;;AAWN,MAAME,UAAoC,GAAIC,KAAD,IAAW;AAAA;;AACpD,QAAM;AAAA,OAACF,KAAD;AAAA,OAAQG;AAAR,MAAoBN,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMO,YAAY,GAAIC,CAAD,IAAY;AAC7BF,IAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;;AACA,QAAIF,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,MAAf,IAAyB,EAA7B,EAAiC;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACH;AACJ,GALD;;AAOA,QAAMC,UAAU,GAAG,MAAM,CAExB,CAFD,CAVoD,CAcxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEI,SAAO,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH,MAAC,KAAD;AAAO,IAAA,IAAI,EAAET,KAAK,CAACU,IAAnB;AAAyB,IAAA,KAAK,EAAEZ,KAAhC;AAAuC,IAAA,IAAI,EAAEE,KAAK,CAACW,IAAnD;AAAyD,IAAA,WAAW,EAAEX,KAAK,CAACY,WAA5E;AAAyF,IAAA,QAAQ,EAAET,CAAC,IAAID,YAAY,CAACC,CAAD,CAApH;AAAyH,IAAA,MAAM,EAAE,MAAMM,UAAU,EAAjJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,EAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOX,KAAP,CAFG,CAAP;AAIH,CApCD;;GAAMC,U;;MAAAA,U;AAsCNA,UAAU,CAACc,YAAX,GAA0B;AACtBH,EAAAA,IAAI,EAAE,YADgB;AAEtBC,EAAAA,IAAI,EAAE,MAFgB;AAGtBC,EAAAA,WAAW,EAAE;AAHS,CAA1B;AAMA,eAAeb,UAAf","sourcesContent":["import React, {useState} from 'react';\nimport styled from 'styled-components';\n\ntype InputFieldType = {\n    name: string\n    type: string\n    input?: string\n    placeholder?: string\n    value?: string\n}\n\nconst Input = styled.input`\n    border: 1px solid #eee;\n    border-radius: 3px;\n    font-size: 16px;\n    margin: 10px 0;\n    padding: 10px 5px;\n    outline: none;\n    width: 250px;\n`;\n\n\nconst InputField: React.FC<InputFieldType> = (props) => {\n    const [input, setInput] = useState('');\n\n    const handleChange = (e: any) => {\n        setInput(e.target.value);\n        if (e.target.value.length == 20) {\n            console.log(\"almost reaching limit\");\n        }\n    };\n\n    const handleBlur = () => {\n\n    };\n\n//     const value = e.target.value;\n//     // Allow for an empty field \n//     if (value == '') {\n//         setQty('');\n//     }\n//     // Allow anything >= 1\n//     if (parseInt(value) >= 1){\n//         setQty(parseInt(value));\n//     }\n// };\n//\n// // Set qty back when leaving an empty field\n// const handleBlur = () => {\n//     if (!qty) {\n//         setQty(initialQty);\n//     }\n// };\n\n    return <React.Fragment>\n        <Input name={props.name} value={input} type={props.type} placeholder={props.placeholder} onChange={e => handleChange(e)} onBlur={() => handleBlur()}/>\n        <span>{input}</span>\n    </React.Fragment>\n};\n\nInputField.defaultProps = {\n    name: 'input name',\n    type: 'name',\n    placeholder: 'Name'\n};\n\nexport default InputField;\n"]},"metadata":{},"sourceType":"module"}