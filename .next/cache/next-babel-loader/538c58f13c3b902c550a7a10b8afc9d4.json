{"ast":null,"code":"var _jsxFileName = \"/Users/nigel/Documents/Projects/drupal/universal/universal-web-component/src/components/HandleChange/HandleChange.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\n\nconst HanChanges = () => {\n  const {\n    0: input,\n    1: setInput\n  } = useState('');\n\n  const handleChange = e => {\n    setInput(e.target.value);\n\n    if (e.target.value.length == 20) {\n      console.log(\"almost reaching limit\");\n    }\n  };\n\n  const handleBlur = () => {\n    console.log('blur');\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"input\", {\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, input));\n};\n\nexport default HanChanges;","map":{"version":3,"sources":["/Users/nigel/Documents/Projects/drupal/universal/universal-web-component/src/components/HandleChange/HandleChange.tsx"],"names":["React","useState","HanChanges","input","setInput","handleChange","e","target","value","length","console","log","handleBlur"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAOA,MAAMC,UAAuC,GAAG,MAAM;AAClD,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBH,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMI,YAAY,GAAIC,CAAD,IAAY;AAC7BF,IAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;;AACA,QAAIF,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,MAAf,IAAyB,EAA7B,EAAiC;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACH;AACJ,GALD;;AAOA,QAAMC,UAAU,GAAG,MAAM;AACrBF,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH,GAFD;;AAIA,SAAO,4BACH;AAAO,IAAA,QAAQ,EAAEN,YAAjB;AAA+B,IAAA,MAAM,EAAEO,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,EAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOT,KAAP,CAFG,CAAP;AAIH,CAlBD;;AAoBA,eAAeD,UAAf","sourcesContent":["import React, {useState} from 'react';\n\ntype handleChangeProps = {\n    handleChange?(): boolean\n    handleBlur?(): boolean\n};\n\nconst HanChanges: React.FC<handleChangeProps> = () => {\n    const [input, setInput] = useState('');\n\n    const handleChange = (e: any) => {\n        setInput(e.target.value);\n        if (e.target.value.length == 20) {\n            console.log(\"almost reaching limit\");\n        }\n    };\n\n    const handleBlur = () => {\n        console.log('blur');\n    };\n\n    return <>\n        <input onChange={handleChange} onBlur={handleBlur}/>\n        <span>{input}</span>\n    </>\n};\n\nexport default HanChanges;"]},"metadata":{},"sourceType":"module"}