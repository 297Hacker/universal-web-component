{"ast":null,"code":"var _s2 = $RefreshSig$();\n\nvar _jsxFileName = \"/Users/nigel/Documents/Projects/drupal/universal/universal-web-component/src/components/Button/Button.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nconst MainButton = styled.button.withConfig({\n  displayName: \"Button__MainButton\",\n  componentId: \"sc-1ehievh-0\"\n})([\"background-color:#82BFE0;border-radius:2px;border:none;color:#FFF;margin:0 10px;padding:10px 40px;&:hover{background-color:#000;cursor:pointer;}\"]);\n_c = MainButton;\nconst Span = styled.span.withConfig({\n  displayName: \"Button__Span\",\n  componentId: \"sc-1ehievh-1\"\n})([\"display:none;&.view{display:block;}\"]);\n_c2 = Span;\n\nconst Button = props => {\n  _s2();\n\n  _s();\n\n  const {\n    0: addClass,\n    1: setClass\n  } = useState(props.myClass);\n  const focusButton = useRef(null);\n  useEffect(() => {\n    console.log('usEffect in effect!');\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(MainButton, {\n    ref: focusButton,\n    className: addClass,\n    name: props.name,\n    value: props.value,\n    onClick: () => setClass('view'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, props.children), __jsx(Span, {\n    className: addClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"view content when button is clicked\"));\n};\n\n_s2(Button, \"t3SaYzI93fZ9ehIYivx62Pn4QrQ=\");\n\n_c4 = Button;\n\n_s(Button, \"uoR4tC7VholOzRPvO2DXZdcFhYY=\");\n\n_c3 = Button;\nButton.defaultProps = {\n  myClass: 'button',\n  name: 'button',\n  value: 'Click',\n  children: 'Click button'\n};\nexport default Button;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MainButton\");\n$RefreshReg$(_c2, \"Span\");\n$RefreshReg$(_c3, \"Button\");\n\nvar _c4;\n\n$RefreshReg$(_c4, \"Button\");","map":{"version":3,"sources":["/Users/nigel/Documents/Projects/drupal/universal/universal-web-component/src/components/Button/Button.tsx"],"names":["MainButton","styled","Span","Button","props","setClass","useState","focusButton","useRef","useEffect","console","myClass","name","value","children"],"mappings":";;;;;;AAAA,OAAA,KAAA,IAAA,QAAA,EAAA,MAAA,EAAA,SAAA,QAAA,OAAA;AACA,OAAA,MAAA,MAAA,mBAAA;AAaA,MAAMA,UAAU,GAAGC,MAAM,CAAT,MAAGA,CAAH,UAAGA,CAAH;AAAA,EAAA,WAAA,EAAA,oBAAA;AAAA,EAAA,WAAA,EAAA;AAAA,CAAGA,EAAH,CAAhB,kJAAgB,CAAGA,CAAnB;KAAMD,U;AAaN,MAAME,IAAI,GAAGD,MAAM,CAAT,IAAGA,CAAH,UAAGA,CAAH;AAAA,EAAA,WAAA,EAAA,cAAA;AAAA,EAAA,WAAA,EAAA;AAAA,CAAGA,EAAH,CAAV,qCAAU,CAAGA,CAAb;MAAMC,I;;AAQN,MAAMC,MAA6B,GAAIC,KAAD,IAAW;AAAA;;AAAA,EAAA,EAAA;;AAC7C,QAAM;AAAA,OAAA,QAAA;AAAA,OAAWC;AAAX,MAAuBC,QAAQ,CAACF,KAAK,CAA3C,OAAqC,CAArC;AAEA,QAAMG,WAAgB,GAAGC,MAAM,CAA/B,IAA+B,CAA/B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,OAAO,CAAPA,GAAAA,CAAAA,qBAAAA;AADK,GAAA,EAATD,EAAS,CAATA;AAIA,SAAO,KAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACH,KAAA,CAAA,UAAA,EAAA;AAAY,IAAA,GAAG,EAAf,WAAA;AACY,IAAA,SAAS,EADrB,QAAA;AAEY,IAAA,IAAI,EAAEL,KAAK,CAFvB,IAAA;AAGY,IAAA,KAAK,EAAEA,KAAK,CAHxB,KAAA;AAIY,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAJnC,MAImC,CAJnC;AAAA,IAAA,MAAA,EAAA,IAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EAKKD,KAAK,CANP,QACH,CADG,EAQH,KAAA,CAAA,IAAA,EAAA;AAAM,IAAA,SAAS,EAAf,QAAA;AAAA,IAAA,MAAA,EAAA,IAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EARJ,qCAQI,CARG,CAAP;AATJ,CAAA;;IAAMD,M;;MAAAA,M;;GAAAA,M;;MAAAA,M;AAqBNA,MAAM,CAANA,YAAAA,GAAsB;AAClBQ,EAAAA,OAAO,EADW,QAAA;AAElBC,EAAAA,IAAI,EAFc,QAAA;AAGlBC,EAAAA,KAAK,EAHa,OAAA;AAIlBC,EAAAA,QAAQ,EAAE;AAJQ,CAAtBX;AAOA,eAAA,MAAA","sourcesContent":["import React, {useState, useRef, useEffect} from 'react';\nimport styled from 'styled-components';\nimport authContext from '../Context/authenticate-component';\n\ntype ButtonProps = {\n    addClass?: string\n    myClass?: string\n    name?: string\n    children?: string\n    value?: string\n    onclick?: {}\n    kind?: string[]\n}\n\nconst MainButton = styled.button`\n  background-color: #82BFE0;\n  border-radius: 2px;\n  border: none;\n  color: #FFF;\n  margin: 0 10px;\n  padding: 10px 40px;\n    &:hover {\n        background-color: #000;\n        cursor: pointer;\n    }\n`;\n\nconst Span = styled.span`\n    display: none;\n    \n    &.view {\n    display: block;\n    }\n`;\n\nconst Button: React.FC<ButtonProps> = (props) => {\n    const [addClass, setClass] = useState(props.myClass);\n\n    const focusButton: any = useRef(null);\n\n    useEffect(() => {\n        console.log('usEffect in effect!');\n    }, []);\n\n    return <>\n        <MainButton ref={focusButton}\n                    className={addClass}\n                    name={props.name}\n                    value={props.value}\n                    onClick={() => setClass('view')}>\n            {props.children}\n        </MainButton>\n        <Span className={addClass}>view content when button is clicked</Span>\n    </>\n};\n\nButton.defaultProps = {\n    myClass: 'button',\n    name: 'button',\n    value: 'Click',\n    children: 'Click button'\n};\n\nexport default Button;"]},"metadata":{},"sourceType":"module"}