{"ast":null,"code":"var _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nclass MakeCounter extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      value: 0\n    });\n\n    _defineProperty(this, \"increment\", () => {\n      this.setState(prevState => ({\n        value: prevState.value === this.props.maxValue ? prevState.value : prevState.value + 1\n      }));\n    });\n\n    _defineProperty(this, \"decrement\", () => {\n      this.setState(prevState => ({\n        value: prevState.value === this.props.minValue ? prevState.value : prevState.value - 1\n      }));\n    });\n  }\n\n  render() {\n    return this.props.children({\n      value: this.state.value,\n      onIncrement: this.increment,\n      onDecrement: this.decrement\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/nigel/Documents/Projects/drupal/universal/universal-web-component/src/components/RenderProps/Resource.tsx"],"names":["MakeCounter","React","Component","value","setState","prevState","props","maxValue","minValue","render","children","state","onIncrement","increment","onDecrement","decrement"],"mappings":";;AAgBA,MAAMA,WAAN,SAA0BC,KAAK,CAACC,SAAhC,CAA8E;AAAA;AAAA;;AAAA,mCAChD;AACtBC,MAAAA,KAAK,EAAE;AADe,KADgD;;AAAA,uCAK9D,MAAM;AACd,WAAKC,QAAL,CAAcC,SAAS,KAAK;AACxBF,QAAAA,KAAK,EACDE,SAAS,CAACF,KAAV,KAAoB,KAAKG,KAAL,CAAWC,QAA/B,GACMF,SAAS,CAACF,KADhB,GAEME,SAAS,CAACF,KAAV,GAAkB;AAJJ,OAAL,CAAvB;AAMH,KAZyE;;AAAA,uCAc9D,MAAM;AACd,WAAKC,QAAL,CAAcC,SAAS,KAAK;AACxBF,QAAAA,KAAK,EACDE,SAAS,CAACF,KAAV,KAAoB,KAAKG,KAAL,CAAWE,QAA/B,GACMH,SAAS,CAACF,KADhB,GAEME,SAAS,CAACF,KAAV,GAAkB;AAJJ,OAAL,CAAvB;AAMH,KArByE;AAAA;;AAuB1EM,EAAAA,MAAM,GAAG;AACL,WAAO,KAAKH,KAAL,CAAWI,QAAX,CAAoB;AACvBP,MAAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWR,KADK;AAEvBS,MAAAA,WAAW,EAAE,KAAKC,SAFK;AAGvBC,MAAAA,WAAW,EAAE,KAAKC;AAHK,KAApB,CAAP;AAKH;;AA7ByE","sourcesContent":["interface InjectedCounterProps {\n    value: number;\n    onIncrement(): void;\n    onDecrement(): void;\n}\n\ninterface MakeCounterProps {\n    minValue?: number;\n    maxValue?: number;\n    children(props: InjectedCounterProps): JSX.Element;\n}\n\ninterface MakeCounterState {\n    value: number;\n}\n\nclass MakeCounter extends React.Component<MakeCounterProps, MakeCounterState> {\n    state: MakeCounterState = {\n        value: 0,\n    };\n\n    increment = () => {\n        this.setState(prevState => ({\n            value:\n                prevState.value === this.props.maxValue\n                    ? prevState.value\n                    : prevState.value + 1,\n        }));\n    };\n\n    decrement = () => {\n        this.setState(prevState => ({\n            value:\n                prevState.value === this.props.minValue\n                    ? prevState.value\n                    : prevState.value - 1,\n        }));\n    };\n\n    render() {\n        return this.props.children({\n            value: this.state.value,\n            onIncrement: this.increment,\n            onDecrement: this.decrement,\n        });\n    }\n}"]},"metadata":{},"sourceType":"script"}