{"ast":null,"code":"var _s2 = $RefreshSig$();\n\nvar _jsxFileName = \"/Users/nigel/Documents/Projects/drupal/universal/universal-web-component/src/components/Button/Button.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nconst MainButton = styled.button.withConfig({\n  displayName: \"Button__MainButton\",\n  componentId: \"sc-1ehievh-0\"\n})([\"border:\", \";border-radius:\", \";cursor:\", \";display:inline-block;font-size:\", \";font-weight:\", \";line-height:\", \";padding:\", \";position:relative;text-align:center;color:\", \";background-color:\", \";&:hover{\", \"}\"], props => props.inverted ? `1px solid ${props.theme.primary}` : 'none', props => props.theme.baseRadius, props => props.disabled ? 'not-allowed' : 'pointer', props => {\n  const {\n    baseFontSize\n  } = props.theme;\n  const baseFontSizeParsed = parseInt(baseFontSize, 10);\n  return props.small && `${baseFontSizeParsed * 0.875}px` || props.large && `${baseFontSizeParsed * 1.375}px` || baseFontSize;\n}, props => props.theme.fontSemibold, props => props.small && '2.2' || props.large && '1.25' || '2.5', props => props.large ? '16px 25px 17px' : '0 12px', props => props.inverted && props.theme.primary || props.link && props.theme.baseFontColor || '#fff', props => props.primary && props.theme.primary || props.danger && props.theme.danger || (props.inverted || props.link) && '#fff' || props.disabled && props.theme.brandGrey, props => props.link && 'text-decoration: underline;');\n_c = MainButton;\n\nconst Button = props => {\n  _s2();\n\n  _s();\n\n  const {\n    0: addClass,\n    1: setClass\n  } = useState(props.myClass);\n\n  const buttonClick = () => {\n    setClass('click');\n  };\n\n  return __jsx(MainButton, {\n    className: addClass,\n    name: props.name,\n    value: props.value,\n    onClick: buttonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }\n  }, props.children);\n};\n\n_s2(Button, \"Br+BLuxKs/eKSuIKRFnORCjxTUM=\");\n\n_c3 = Button;\n\n_s(Button, \"0hNaFiwfp5HG0DoJcT9m8I24tDg=\");\n\n_c2 = Button;\nButton.defaultProps = {\n  myClass: 'button',\n  name: 'button',\n  value: 'Click',\n  children: 'Click button'\n};\nexport default Button;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MainButton\");\n$RefreshReg$(_c2, \"Button\");\n\nvar _c3;\n\n$RefreshReg$(_c3, \"Button\");","map":{"version":3,"sources":["/Users/nigel/Documents/Projects/drupal/universal/universal-web-component/src/components/Button/Button.tsx"],"names":["MainButton","styled","props","primary","baseFontSize","baseFontSizeParsed","parseInt","Button","setClass","useState","buttonClick","myClass","name","value","children"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport styled from 'styled-components';\n\ntype ButtonProps = {\n    addClass?: string\n    myClass?: string\n    name?: string\n    children?: string\n    value?: string\n    onclick?: {}\n    kind?: string[]\n}\n\ntype styleProps = {\n    primary: any\n    cta: any\n}\n\nconst MainButton = styled.button`\n  border: ${props => props.inverted ? `1px solid ${props.theme.primary}` : 'none'};\n  border-radius: ${props => props.theme.baseRadius};\n  cursor: ${props => props.disabled ? 'not-allowed' : 'pointer'};\n  display: inline-block;\n  font-size: ${props => {\n    const { baseFontSize } = props.theme;\n    const baseFontSizeParsed = parseInt(baseFontSize, 10);\n    return (props.small && `${baseFontSizeParsed * 0.875}px`)\n        || (props.large && `${baseFontSizeParsed * 1.375}px`)\n        || baseFontSize;\n}};\n  font-weight: ${props => props.theme.fontSemibold};\n  line-height: ${props =>\n    (props.small && '2.2') || (props.large && '1.25') || '2.5'\n    };\n  padding: ${props =>\n    props.large ? '16px 25px 17px' : '0 12px'\n    };\n  position: relative;\n  text-align: center;\n  color: ${props =>\n    (props.inverted && props.theme.primary)\n    || (props.link && props.theme.baseFontColor)\n    || '#fff'\n    };\n  background-color: ${props =>\n    (props.primary && props.theme.primary)\n    || (props.danger && props.theme.danger)\n    || ((props.inverted || props.link) && '#fff')\n    || (props.disabled && props.theme.brandGrey)\n    };\n  \n  &:hover {\n    ${props => props.link && 'text-decoration: underline;'}\n  }\n`;\n\nconst Button: React.FC<ButtonProps> = (props) => {\n    const [addClass, setClass] = useState(props.myClass);\n\n    const buttonClick = () => {\n        setClass('click');\n    };\n\n    return <MainButton className={addClass} name={props.name} value={props.value} onClick={buttonClick}>{props.children}</MainButton>\n};\n\nButton.defaultProps = {\n    myClass: 'button',\n    name: 'button',\n    value: 'Click',\n    children: 'Click button'\n};\n\nexport default Button;"]},"metadata":{},"sourceType":"module"}