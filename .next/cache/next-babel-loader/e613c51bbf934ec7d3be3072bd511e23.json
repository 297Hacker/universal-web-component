{"ast":null,"code":"var _jsxFileName = \"/Users/nigel/Documents/Projects/drupal/universal/universal-web-component/src/components/Form/Registration/RegistrationForm.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport InputField from '../../InputField/InputField';\nimport Button from '../../Button/Button';\nimport Spinner from '../../Spinner/Spinner';\n\nconst Registration = props => {\n  const formElementArray = [];\n\n  for (let key in props) {\n    formElementArray.push({\n      id: key,\n      config: any = props[key]\n    });\n  }\n\n  let form = formElementArray.map(formElement => __jsx(InputField, {\n    key: formElement.id,\n    name: formElement.name,\n    type: formElement.type,\n    maxValue: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }));\n\n  if (props.loading) {\n    form = __jsx(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return __jsx(React.Fragment, null, form, __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Submit\"));\n};\n\n_c2 = Registration;\n_c = Registration;\nexport default Registration;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registration\");\n\nvar _c2;\n\n$RefreshReg$(_c2, \"Registration\");","map":{"version":3,"sources":["/Users/nigel/Documents/Projects/drupal/universal/universal-web-component/src/components/Form/Registration/RegistrationForm.tsx"],"names":["Registration","props","formElementArray","id","config","any","form","formElement"],"mappings":";;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,UAAA,MAAA,6BAAA;AACA,OAAA,MAAA,MAAA,qBAAA;AACA,OAAA,OAAA,MAAA,uBAAA;;AAoCA,MAAMA,YAAsB,GAAIC,KAAD,IAA8B;AACzD,QAAMC,gBAAqB,GAA3B,EAAA;;AACA,OAAK,IAAL,GAAA,IAAA,KAAA,EAAuB;AACnBA,IAAAA,gBAAgB,CAAhBA,IAAAA,CAAsB;AAClBC,MAAAA,EAAE,EADgB,GAAA;AAElBC,MAAAA,MAAM,EAACC,GAAG,GAAGJ,KAAK,CAAA,GAAA;AAFA,KAAtBC;AAIH;;AACD,MAAII,IAAI,GAAG,gBAAgB,CAAhB,GAAA,CAAsBC,WAAD,IAC5B,KAAA,CAAA,UAAA,EAAA;AAAY,IAAA,GAAG,EAAEA,WAAW,CAA5B,EAAA;AAAiC,IAAA,IAAI,EAAEA,WAAW,CAAlD,IAAA;AAAyD,IAAA,IAAI,EAAEA,WAAW,CAA1E,IAAA;AAAiF,IAAA,QAAQ,EAAzF,EAAA;AAAA,IAAA,MAAA,EAAA,IAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,CADO,CAAX;;AAGA,MAAIN,KAAK,CAAT,OAAA,EAAkB;AACdK,IAAAA,IAAI,GAAG,KAAA,CAAA,OAAA,EAAA;AAAA,MAAA,MAAA,EAAA,IAAA;AAAA,MAAA,QAAA,EAAA;AAAA,QAAA,QAAA,EAAA,YAAA;AAAA,QAAA,UAAA,EAAA,EAAA;AAAA,QAAA,YAAA,EAAA;AAAA;AAAA,KAAA,CAAPA;AACH;;AACD,SAAO,KAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EAAA,IAAA,EAEH,KAAA,CAAA,MAAA,EAAA;AAAA,IAAA,MAAA,EAAA,IAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EAFJ,QAEI,CAFG,CAAP;AAdJ,CAAA;;MAAMN,Y;KAAAA,Y;AAoBN,eAAA,YAAA","sourcesContent":["import React from 'react';\nimport InputField from '../../InputField/InputField';\nimport Button from '../../Button/Button';\nimport Spinner from '../../Spinner/Spinner';\n\ntype registrationProps = {\n    name: nameProps;\n    street: streetProps;\n    email: emailProps;\n    loading: boolean;\n}\n\ntype nameProps = {\n    elementType: string;\n    elementConfig: ElementConfig;\n    value: string;\n}\n\ntype streetProps = {\n    elementType: string;\n    elementConfig: ElementConfig;\n    value: string;\n}\n\ntype emailProps = {\n    elementType: string;\n    elementConfig: ElementConfig;\n    value: string;\n}\n\ntype ElementConfig = {\n    type: string;\n    placeholder: string;\n}\n\ntype Indexer<T> = {\n    [key: number]: T\n}\n\nconst Registration: React.FC = (props: registrationProps) => {\n    const formElementArray: any = [];\n    for (let key in props) {\n        formElementArray.push({\n            id: key,\n            config:any = props[key]\n        });\n    }\n    let form = formElementArray.map((formElement: any) => (\n        <InputField key={formElement.id} name={formElement.name} type={formElement.type} maxValue={20}/>\n    ));\n    if (props.loading){\n        form = <Spinner></Spinner>;\n    }\n    return <>\n        {form}\n        <Button>Submit</Button>\n    </>\n};\n\nexport default Registration;"]},"metadata":{},"sourceType":"module"}