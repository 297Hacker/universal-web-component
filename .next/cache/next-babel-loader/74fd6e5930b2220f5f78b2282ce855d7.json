{"ast":null,"code":"var _jsxFileName = \"/Users/nigel/Documents/Projects/drupal/universal/universal-web-component/src/components/InputField/InputField.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nconst Input = styled.input.withConfig({\n  displayName: \"InputField__Input\",\n  componentId: \"sc-3hn3ct-0\"\n})([\"border:1px solid #eee;border-radius:3px;font-size:16px;padding:10px 5px;outline:none;width:250px;\"]);\n_c = Input;\n\nconst InputField = props => {\n  _s();\n\n  const {\n    0: input,\n    1: setInput\n  } = useState('');\n\n  const handleChange = e => {\n    setInput(e.target.value);\n\n    if (e.target.value.length > 0) {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 20\n        }\n      }, \"Limit is reached!\");\n    }\n  };\n\n  const handleBlur = () => {};\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }\n  }, __jsx(Input, {\n    name: props.name,\n    type: props.type,\n    placeholder: input,\n    onChange: e => handleChange(e),\n    onBlur: () => handleBlur(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, input));\n};\n\n_s(InputField, \"WVveI0ACa0LqOSOlGzu58xcz+KE=\");\n\n_c2 = InputField;\nInputField.defaultProps = {\n  name: 'input name',\n  type: 'name'\n};\nexport default InputField;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Input\");\n$RefreshReg$(_c2, \"InputField\");","map":{"version":3,"sources":["/Users/nigel/Documents/Projects/drupal/universal/universal-web-component/src/components/InputField/InputField.tsx"],"names":["React","useState","styled","Input","input","InputField","props","setInput","handleChange","e","target","value","length","handleBlur","name","type","defaultProps"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AASA,MAAMC,KAAK,GAAGD,MAAM,CAACE,KAAV;AAAA;AAAA;AAAA,yGAAX;KAAMD,K;;AAUN,MAAME,UAAoC,GAAIC,KAAD,IAAW;AAAA;;AACpD,QAAM;AAAA,OAACF,KAAD;AAAA,OAAQG;AAAR,MAAoBN,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMO,YAAY,GAAIC,CAAD,IAAY;AAC7BF,IAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;;AACA,QAAGF,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,MAAf,GAAwB,CAA3B,EAA6B;AACzB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP;AACH;AACJ,GALD;;AAOA,QAAMC,UAAU,GAAG,MAAM,CAExB,CAFD;;AAIA,SAAO,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH,MAAC,KAAD;AAAO,IAAA,IAAI,EAAEP,KAAK,CAACQ,IAAnB;AAAyB,IAAA,IAAI,EAAER,KAAK,CAACS,IAArC;AAA2C,IAAA,WAAW,EAAEX,KAAxD;AAA+D,IAAA,QAAQ,EAAEK,CAAC,IAAID,YAAY,CAACC,CAAD,CAA1F;AAA+F,IAAA,MAAM,EAAE,MAAMI,UAAU,EAAvH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,EAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOT,KAAP,CAFG,CAAP;AAIH,CAlBD;;GAAMC,U;;MAAAA,U;AAoBNA,UAAU,CAACW,YAAX,GAA0B;AACtBF,EAAAA,IAAI,EAAE,YADgB;AAEtBC,EAAAA,IAAI,EAAE;AAFgB,CAA1B;AAKA,eAAeV,UAAf","sourcesContent":["import React, {useState} from 'react';\nimport styled from 'styled-components';\n\ntype InputFieldType = {\n    qty: any,\n    name: string,\n    type: string,\n    input: string\n}\n\nconst Input = styled.input`\n    border: 1px solid #eee;\n    border-radius: 3px;\n    font-size: 16px;\n    padding: 10px 5px;\n    outline: none;\n    width: 250px;\n`;\n\n\nconst InputField: React.FC<InputFieldType> = (props) => {\n    const [input, setInput] = useState('');\n\n    const handleChange = (e: any) => {\n        setInput(e.target.value);\n        if(e.target.value.length > 0){\n            return <div>Limit is reached!</div>\n        }\n    };\n\n    const handleBlur = () => {\n\n    };\n\n    return <React.Fragment>\n        <Input name={props.name} type={props.type} placeholder={input} onChange={e => handleChange(e)} onBlur={() => handleBlur()}/>\n        <span>{input}</span>\n    </React.Fragment>\n};\n\nInputField.defaultProps = {\n    name: 'input name',\n    type: 'name'\n};\n\nexport default InputField;\n"]},"metadata":{},"sourceType":"module"}