{"ast":null,"code":"var _s2 = $RefreshSig$();\n\nvar _jsxFileName = \"/Users/nigel/Documents/Projects/drupal/universal/universal-web-component/src/components/InputField/InputField.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nconst Input = styled.input.withConfig({\n  displayName: \"InputField__Input\",\n  componentId: \"sc-3hn3ct-0\"\n})([\"border:1px solid #eee;border-radius:3px;font-size:16px;margin:10px 10px 10px 0;padding:10px 5px;outline:none;width:250px;\"]);\n_c = Input;\n\nconst InputField = props => {\n  _s2();\n\n  _s();\n\n  const {\n    0: input,\n    1: setInput\n  } = useState('');\n  const lengthMax = props.maxValue;\n  const lengthWarning = 15;\n  let warningText = {};\n\n  const handleChange = e => {\n    setInput(e.target.value);\n\n    if (e.target.value.length > lengthWarning && e.target.value.length <= lengthMax) {\n      console.log('length check');\n      warningText = __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 27\n        }\n      }, \"max text length is almost reached\");\n    } else {\n      console.log('warning check');\n      warningText = __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 27\n        }\n      }, \" \");\n    }\n  };\n\n  const handleBlur = () => {};\n\n  return __jsx(React.Fragment, null, __jsx(Input, {\n    maxLength: props.maxValue,\n    name: props.name,\n    value: input,\n    type: props.type,\n    placeholder: props.placeholder,\n    onChange: e => handleChange(e),\n    onBlur: () => handleBlur(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), warningText);\n};\n\n_s2(InputField, \"tlBHzCsE/uB8dbmG4dY4JbbYNaQ=\");\n\n_c3 = InputField;\n\n_s(InputField, \"WVveI0ACa0LqOSOlGzu58xcz+KE=\");\n\n_c2 = InputField;\nInputField.defaultProps = {\n  name: 'input name',\n  type: 'name',\n  maxValue: 20,\n  placeholder: 'Name'\n};\nexport default InputField;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Input\");\n$RefreshReg$(_c2, \"InputField\");\n\nvar _c3;\n\n$RefreshReg$(_c3, \"InputField\");","map":{"version":3,"sources":["/Users/nigel/Documents/Projects/drupal/universal/universal-web-component/src/components/InputField/InputField.tsx"],"names":["Input","styled","InputField","props","setInput","useState","lengthMax","lengthWarning","warningText","handleChange","e","console","handleBlur","name","type","maxValue","placeholder"],"mappings":";;;;;;AAAA,OAAA,KAAA,IAAA,QAAA,QAAA,OAAA;AACA,OAAA,MAAA,MAAA,mBAAA;AAWA,MAAMA,KAAK,GAAGC,MAAM,CAAT,KAAGA,CAAH,UAAGA,CAAH;AAAA,EAAA,WAAA,EAAA,mBAAA;AAAA,EAAA,WAAA,EAAA;AAAA,CAAGA,EAAH,CAAX,2HAAW,CAAGA,CAAd;KAAMD,K;;AAUN,MAAME,UAAoC,GAAIC,KAAD,IAAW;AAAA;;AAAA,EAAA,EAAA;;AACpD,QAAM;AAAA,OAAA,KAAA;AAAA,OAAQC;AAAR,MAAoBC,QAAQ,CAAlC,EAAkC,CAAlC;AACA,QAAMC,SAAiB,GAAGH,KAAK,CAA/B,QAAA;AACA,QAAMI,aAAqB,GAA3B,EAAA;AACA,MAAIC,WAAgB,GAApB,EAAA;;AAEA,QAAMC,YAAY,GAAIC,CAAD,IAAY;AAC7BN,IAAAA,QAAQ,CAACM,CAAC,CAADA,MAAAA,CAATN,KAAQ,CAARA;;AACA,QAAIM,CAAC,CAADA,MAAAA,CAAAA,KAAAA,CAAAA,MAAAA,GAAAA,aAAAA,IAAyCA,CAAC,CAADA,MAAAA,CAAAA,KAAAA,CAAAA,MAAAA,IAA7C,SAAA,EAAiF;AAC7EC,MAAAA,OAAO,CAAPA,GAAAA,CAAAA,cAAAA;AACAH,MAAAA,WAAW,GAAG,KAAA,CAAA,MAAA,EAAA;AAAA,QAAA,MAAA,EAAA,IAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA,EAAA;AAAA,UAAA,YAAA,EAAA;AAAA;AAAA,OAAA,EAAdA,mCAAc,CAAdA;AAFJ,KAAA,MAGO;AACHG,MAAAA,OAAO,CAAPA,GAAAA,CAAAA,eAAAA;AACAH,MAAAA,WAAW,GAAG,KAAA,CAAA,MAAA,EAAA;AAAA,QAAA,MAAA,EAAA,IAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA,EAAA;AAAA,UAAA,YAAA,EAAA;AAAA;AAAA,OAAA,EAAdA,GAAc,CAAdA;AACH;AARL,GAAA;;AAWA,QAAMI,UAAU,GAAG,MAAM,CAAzB,CAAA;;AAGA,SAAO,KAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACH,KAAA,CAAA,KAAA,EAAA;AAAO,IAAA,SAAS,EAAET,KAAK,CAAvB,QAAA;AAAkC,IAAA,IAAI,EAAEA,KAAK,CAA7C,IAAA;AAAoD,IAAA,KAAK,EAAzD,KAAA;AACO,IAAA,IAAI,EAAEA,KAAK,CADlB,IAAA;AACyB,IAAA,WAAW,EAAEA,KAAK,CAD3C,WAAA;AAEO,IAAA,QAAQ,EAAEO,CAAC,IAAID,YAAY,CAFlC,CAEkC,CAFlC;AAEuC,IAAA,MAAM,EAAE,MAAMG,UAFrD,EAAA;AAAA,IAAA,MAAA,EAAA,IAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,CADG,EAAP,WAAO,CAAP;AApBJ,CAAA;;IAAMV,U;;MAAAA,U;;GAAAA,U;;MAAAA,U;AA6BNA,UAAU,CAAVA,YAAAA,GAA0B;AACtBW,EAAAA,IAAI,EADkB,YAAA;AAEtBC,EAAAA,IAAI,EAFkB,MAAA;AAGtBC,EAAAA,QAAQ,EAHc,EAAA;AAItBC,EAAAA,WAAW,EAAE;AAJS,CAA1Bd;AAOA,eAAA,UAAA","sourcesContent":["import React, {useState} from 'react';\nimport styled from 'styled-components';\n\ntype InputFieldType = {\n    name: string\n    type: string\n    input?: string\n    placeholder?: string\n    maxValue: number\n    value?: string\n}\n\nconst Input = styled.input`\n    border: 1px solid #eee;\n    border-radius: 3px;\n    font-size: 16px;\n    margin: 10px 10px 10px 0;\n    padding: 10px 5px;\n    outline: none;\n    width: 250px;\n`;\n\nconst InputField: React.FC<InputFieldType> = (props) => {\n    const [input, setInput] = useState('');\n    const lengthMax: number = props.maxValue;\n    const lengthWarning: number = 15;\n    let warningText: any = {};\n\n    const handleChange = (e: any) => {\n        setInput(e.target.value);\n        if (e.target.value.length > lengthWarning && e.target.value.length <= lengthMax) {\n            console.log('length check');\n            warningText = <span>max text length is almost reached</span>;\n        } else {\n            console.log('warning check');\n            warningText = <span> </span>;\n        }\n    };\n\n    const handleBlur = () => {\n    };\n\n    return <>\n        <Input maxLength={props.maxValue} name={props.name} value={input}\n               type={props.type} placeholder={props.placeholder}\n               onChange={e => handleChange(e)} onBlur={() => handleBlur()}\n        />\n        {warningText}\n    </>;\n};\n\nInputField.defaultProps = {\n    name: 'input name',\n    type: 'name',\n    maxValue: 20,\n    placeholder: 'Name'\n};\n\nexport default InputField;\n"]},"metadata":{},"sourceType":"module"}