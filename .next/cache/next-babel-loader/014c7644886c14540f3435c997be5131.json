{"ast":null,"code":"var _jsxFileName = \"/Users/nigel/Documents/MyDocuments/Projects/drupal/universal/universal-web-component/src/components/Blockquote/Blockquote.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nconst BlockquoteContent = styled.blockquote.withConfig({\n  displayName: \"Blockquote__BlockquoteContent\",\n  componentId: \"sc-1sdx0kz-0\"\n})([\"color:\", \";font-size:42px;font-style:italic;line-height:42px;margin:10px auto;text-align:center;width:calc(100% - 40px);&:after{content:'\\\"'; } &:before { content: '\\\"';}\"], props => props.color);\n_c = BlockquoteContent;\n\nconst Blockquote = props => {\n  let curContent;\n\n  if (props.children) {\n    curContent = __jsx(React.Fragment, null, props.children);\n  } else {\n    curContent = __jsx(React.Fragment, null, props.content);\n  }\n\n  return __jsx(BlockquoteContent, {\n    color: props.color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }\n  }, curContent);\n};\n\n_c3 = Blockquote;\n_c2 = Blockquote;\nBlockquote.defaultProps = {\n  color: \"#000\",\n  content: \"Blockquote content\"\n};\nexport default Blockquote;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BlockquoteContent\");\n$RefreshReg$(_c2, \"Blockquote\");\n\nvar _c3;\n\n$RefreshReg$(_c3, \"Blockquote\");","map":{"version":3,"sources":["/Users/nigel/Documents/MyDocuments/Projects/drupal/universal/universal-web-component/src/components/Blockquote/Blockquote.tsx"],"names":["BlockquoteContent","styled","props","Blockquote","curContent","color","content"],"mappings":";;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,MAAA,MAAA,mBAAA;AAQA,MAAMA,iBAAiB,GAAGC,MAAM,CAAT,UAAGA,CAAH,UAAGA,CAAH;AAAA,EAAA,WAAA,EAAA,+BAAA;AAAA,EAAA,WAAA,EAAA;AAAA,CAAGA,EAAH,CAAA,QAAA,EAAA,kKAAA,CAAGA,EACbC,KAAK,IAAIA,KAAK,CAD3B,KAA0BD,CAA1B;KAAMD,iB;;AAgBN,MAAMG,UAAU,GAAID,KAAD,IAA4B;AAC3C,MAAA,UAAA;;AACI,MAAIA,KAAK,CAAT,QAAA,EAAoB;AAChBE,IAAAA,UAAU,GAAG,KAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EAAGF,KAAK,CAArBE,QAAa,CAAbA;AADJ,GAAA,MAEO;AACHA,IAAAA,UAAU,GAAG,KAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EAAGF,KAAK,CAArBE,OAAa,CAAbA;AACH;;AACL,SAAO,KAAA,CAAA,iBAAA,EAAA;AAAmB,IAAA,KAAK,EAAEF,KAAK,CAA/B,KAAA;AAAA,IAAA,MAAA,EAAA,IAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EAAP,UAAO,CAAP;AAPJ,CAAA;;MAAMC,U;MAAAA,U;AAUNA,UAAU,CAAVA,YAAAA,GAA0B;AACtBE,EAAAA,KAAK,EADiB,MAAA;AAEtBC,EAAAA,OAAO,EAAE;AAFa,CAA1BH;AAKA,eAAA,UAAA","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\ntype blockQuoteProps = {\n    color?: any\n    content?: string\n    children?: string\n}\n\nconst BlockquoteContent = styled.blockquote`\n    color: ${props => props.color};\n    font-size: 42px;\n    font-style: italic;\n    line-height: 42px;\n    margin: 10px auto;\n    text-align: center;\n    width: calc(100% - 40px);\n    &:after {\n        content: '\"';\n    }\n    &:before {\n        content: '\"';\n    }\n`;\n\nconst Blockquote = (props: blockQuoteProps) => {\n    let curContent;\n        if (props.children) {\n            curContent = <>{props.children}</>;\n        } else {\n            curContent = <>{props.content}</>;\n        }\n    return <BlockquoteContent color={props.color}>{curContent}</BlockquoteContent>\n};\n\nBlockquote.defaultProps = {\n    color: \"#000\",\n    content: \"Blockquote content\"\n};\n\nexport default Blockquote;\n"]},"metadata":{},"sourceType":"module"}