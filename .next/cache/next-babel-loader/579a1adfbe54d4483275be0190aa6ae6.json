{"ast":null,"code":"var _jsxFileName = \"/Users/nigel/Documents/Projects/drupal/universal/universal-web-component/src/component/Button/Button.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nconst MainButton = styled.button`\n  background-color: ${props => props.primary && '$primary' || props.danger && '$danger' || (props.inverted || props.link) && '#fff' || props.disabled && '$brand-grey'};\n  border-radius: 2px;\n  border: none;\n  color: #FFF;\n  margin: 0 10px;\n  padding: 10px 40px;\n\n    &:hover {\n        background-color: #000;\n        cursor: pointer;\n    }\n    \n    &--primary {\n        background-color: #d0245a;\n    }\n    \n    &--transparent {\n        background-color: transparent;\n        border: 2px solid #eaeaea;\n    }\n    \n    &--cta {\n        background-color: #237c7e;\n    }\n`;\n_c = MainButton;\nconst theme = {\n  primary: '#d0245a',\n  transparent: 'transparent',\n  cta: '#237c7e'\n};\n\nconst Button = props => {\n  return __jsx(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, __jsx(MainButton, {\n    style: props.primary,\n    className: props.class,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, props.children)));\n};\n\n_c3 = Button;\n_c2 = Button;\nexport default Button;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MainButton\");\n$RefreshReg$(_c2, \"Button\");\n\nvar _c3;\n\n$RefreshReg$(_c3, \"Button\");","map":{"version":3,"sources":["/Users/nigel/Documents/Projects/drupal/universal/universal-web-component/src/component/Button/Button.tsx"],"names":["MainButton","styled","button","props","theme","primary","transparent","cta","Button"],"mappings":";;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,MAAA,MAAA,mBAAA;AAEA,MAAMA,UAAU,GAAGC,MAAM,CAACC,MAAO;sBACXC,KAAK,IACtBA,KAAK,CAALA,OAAAA,IAAD,UAACA,IACGA,KAAK,CAALA,MAAAA,IADJ,SAACA,IAEG,CAACA,KAAK,CAALA,QAAAA,IAAkBA,KAAK,CAAxB,IAAA,KAFJ,MAACA,IAGGA,KAAK,CAALA,QAAAA,IAAkB,aACrB;;;;;;;;;;;;;;;;;;;;;;;;CANL;KAAMH,U;AAgCN,MAAMI,KAAK,GAAG;AACVC,EAAAA,OAAO,EADG,SAAA;AAEVC,EAAAA,WAAW,EAFD,aAAA;AAGVC,EAAAA,GAAG,EAAE;AAHK,CAAd;;AAaA,MAAMC,MAA6B,GAAIL,KAAD,IAAW;AAC7C,SAAO,KAAA,CAAA,aAAA,EAAA;AAAe,IAAA,KAAK,EAApB,KAAA;AAAA,IAAA,MAAA,EAAA,IAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EACH,KAAA,CAAA,KAAA,EAAA;AAAA,IAAA,MAAA,EAAA,IAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EACI,KAAA,CAAA,UAAA,EAAA;AAAY,IAAA,KAAK,EAAEA,KAAK,CAAxB,OAAA;AAAkC,IAAA,SAAS,EAAEA,KAAK,CAAlD,KAAA;AAAA,IAAA,MAAA,EAAA,IAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EAA2DA,KAAK,CAFxE,QAEQ,CADJ,CADG,CAAP;AADJ,CAAA;;MAAMK,M;MAAAA,M;AAQN,eAAA,MAAA","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst MainButton = styled.button`\n  background-color: ${props =>\n    (props.primary && '$primary')\n    || (props.danger && '$danger')\n    || ((props.inverted || props.link) && '#fff')\n    || (props.disabled && '$brand-grey')\n    };\n  border-radius: 2px;\n  border: none;\n  color: #FFF;\n  margin: 0 10px;\n  padding: 10px 40px;\n\n    &:hover {\n        background-color: #000;\n        cursor: pointer;\n    }\n    \n    &--primary {\n        background-color: #d0245a;\n    }\n    \n    &--transparent {\n        background-color: transparent;\n        border: 2px solid #eaeaea;\n    }\n    \n    &--cta {\n        background-color: #237c7e;\n    }\n`;\n\nconst theme = {\n    primary: '#d0245a',\n    transparent: 'transparent',\n    cta: '#237c7e'\n};\n\ntype ButtonProps = {\n    class: string,\n    children: string,\n    type?: string,\n    primary: string\n}\n\nconst Button: React.FC<ButtonProps> = (props) => {\n    return <ThemeProvider theme={theme}>\n        <div>\n            <MainButton style={props.primary} className={props.class}>{props.children}</MainButton>\n        </div>\n    </ThemeProvider>\n};\n\nexport default Button;"]},"metadata":{},"sourceType":"module"}