{"ast":null,"code":"var _jsxFileName = \"/Users/nigel/Documents/Projects/drupal/universal/universal-web-component/src/components/Button/Button.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\nimport theme from 'styled-theming';\nconst buttonFontSize = theme.variants('layout', 'kind', {\n  small: {\n    compact: '0.9rem',\n    cozy: '1.2rem'\n  },\n  medium: {\n    compact: '1rem',\n    cozy: '1.3rem'\n  },\n  large: {\n    compact: '1.1rem',\n    cozy: '1.4rem'\n  }\n});\nconst MainButton = styled.button.withConfig({\n  displayName: \"Button__MainButton\",\n  componentId: \"sc-1ehievh-0\"\n})([\"background-color:\", \";border-radius:2px;border:none;color:#FFF;font-size:16px;margin:0 10px;padding:10px 40px;&:hover{background-color:#000;cursor:pointer;}\"], themeSetup);\n_c = MainButton;\n\nconst Button = props => {\n  return __jsx(ThemeProvider, {\n    theme: {\n      styling: 'backgroundColor'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }\n  }, __jsx(MainButton, {\n    primary: true,\n    className: props.class,\n    name: props.name,\n    value: props.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, props.children));\n};\n\n_c3 = Button;\n_c2 = Button;\nButton.defaultProps = {\n  name: 'button',\n  value: 'Click',\n  children: 'Click button',\n  kind: ['primary']\n};\nexport default Button;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MainButton\");\n$RefreshReg$(_c2, \"Button\");\n\nvar _c3;\n\n$RefreshReg$(_c3, \"Button\");","map":{"version":3,"sources":["/Users/nigel/Documents/Projects/drupal/universal/universal-web-component/src/components/Button/Button.tsx"],"names":["buttonFontSize","small","compact","cozy","medium","large","MainButton","styled","Button","props","styling","name","value","children","kind"],"mappings":";;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,MAAA,IAAA,aAAA,QAAA,mBAAA;AACA,OAAA,KAAA,MAAA,gBAAA;AAEA,MAAMA,cAAc,GAAG,KAAK,CAAL,QAAA,CAAA,QAAA,EAAA,MAAA,EAAiC;AACpDC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,OAAO,EAAT,QAAA;AAAqBC,IAAAA,IAAI,EAAE;AAA3B,GAD6C;AAEpDC,EAAAA,MAAM,EAAE;AAAEF,IAAAA,OAAO,EAAT,MAAA;AAAmBC,IAAAA,IAAI,EAAE;AAAzB,GAF4C;AAGpDE,EAAAA,KAAK,EAAE;AAAEH,IAAAA,OAAO,EAAT,QAAA;AAAqBC,IAAAA,IAAI,EAAE;AAA3B;AAH6C,CAAjC,CAAvB;AAeA,MAAMG,UAAU,GAAGC,MAAM,CAAT,MAAGA,CAAH,UAAGA,CAAH;AAAA,EAAA,WAAA,EAAA,oBAAA;AAAA,EAAA,WAAA,EAAA;AAAA,CAAGA,EAAH,CAAA,mBAAA,EAAA,yIAAA,CAAGA,EAAnB,UAAmBA,CAAnB;KAAMD,U;;AAeN,MAAME,MAA6B,GAAIC,KAAD,IAAW;AAC7C,SAAO,KAAA,CAAA,aAAA,EAAA;AAAe,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAE;AAAV,KAAtB;AAAA,IAAA,MAAA,EAAA,IAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EACH,KAAA,CAAA,UAAA,EAAA;AAAY,IAAA,OAAO,EAAnB,IAAA;AAAoB,IAAA,SAAS,EAAED,KAAK,CAApC,KAAA;AAA4C,IAAA,IAAI,EAAEA,KAAK,CAAvD,IAAA;AAA8D,IAAA,KAAK,EAAEA,KAAK,CAA1E,KAAA;AAAA,IAAA,MAAA,EAAA,IAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EAAmFA,KAAK,CAD5F,QACI,CADG,CAAP;AADJ,CAAA;;MAAMD,M;MAAAA,M;AAMNA,MAAM,CAANA,YAAAA,GAAsB;AAClBG,EAAAA,IAAI,EADc,QAAA;AAElBC,EAAAA,KAAK,EAFa,OAAA;AAGlBC,EAAAA,QAAQ,EAHU,cAAA;AAIlBC,EAAAA,IAAI,EAAE,CAAA,SAAA;AAJY,CAAtBN;AAOA,eAAA,MAAA","sourcesContent":["import React from 'react';\nimport styled, {ThemeProvider} from 'styled-components';\nimport theme from 'styled-theming';\n\nconst buttonFontSize = theme.variants('layout', 'kind', {\n    small: { compact: '0.9rem', cozy: '1.2rem' },\n    medium: { compact: '1rem', cozy: '1.3rem' },\n    large: { compact: '1.1rem', cozy: '1.4rem' },\n});\n\ntype ButtonProps = {\n    class?: string,\n    name?: string,\n    children?: string,\n    value?: string,\n    onclick?: {},\n    kind?: string[];\n}\n\nconst MainButton = styled.button`\n  background-color: ${themeSetup};\n  border-radius: 2px;\n  border: none;\n  color: #FFF;\n  font-size: 16px;\n  margin: 0 10px;\n  padding: 10px 40px;\n\n    &:hover {\n        background-color: #000;\n        cursor: pointer;\n    }\n`;\n\nconst Button: React.FC<ButtonProps> = (props) => {\n    return <ThemeProvider theme={{styling: 'backgroundColor'}}>\n        <MainButton primary className={props.class} name={props.name} value={props.value}>{props.children}</MainButton>\n    </ThemeProvider>\n};\n\nButton.defaultProps = {\n    name: 'button',\n    value: 'Click',\n    children: 'Click button',\n    kind: ['primary']\n};\n\nexport default Button;"]},"metadata":{},"sourceType":"module"}