{"ast":null,"code":"var _jsxFileName = \"/Users/nigel/Documents/Projects/drupal/universal/universal-web-component/src/components/Pizza/Controls/Control/Control.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\n\nconst control = props => {\n  let addIngredientHandler = type => {\n    const oldCount = this.state.ingredients[type];\n    const updatedCount = oldCount + 1;\n\n    const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n    updatedIngredients[type] = updatedCount;\n  };\n\n  let removeIngredientHandler = type => {};\n\n  return __jsx(React.Fragment, null, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, props.label), __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, \"+\"), __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, \"-\"));\n};\n\nexport default control;","map":{"version":3,"sources":["/Users/nigel/Documents/Projects/drupal/universal/universal-web-component/src/components/Pizza/Controls/Control/Control.tsx"],"names":["React","control","props","addIngredientHandler","type","oldCount","state","ingredients","updatedCount","updatedIngredients","removeIngredientHandler","label"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAMA,MAAMC,OAA+B,GAAIC,KAAD,IAAW;AAC/C,MAAIC,oBAAoB,GAAIC,IAAD,IAAU;AACjC,UAAMC,QAAQ,GAAG,KAAKC,KAAL,CAAWC,WAAX,CAAuBH,IAAvB,CAAjB;AACA,UAAMI,YAAY,GAAGH,QAAQ,GAAG,CAAhC;;AACA,UAAMI,kBAAkB,qBACjB,KAAKH,KAAL,CAAWC,WADM,CAAxB;;AAGAE,IAAAA,kBAAkB,CAACL,IAAD,CAAlB,GAA2BI,YAA3B;AACH,GAPD;;AASA,MAAIE,uBAAuB,GAAIN,IAAD,IAAU,CAEvC,CAFD;;AAIA,SAAO,4BACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOF,KAAK,CAACS,KAAb,CADG,EAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFG,EAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHG,CAAP;AAKH,CAnBD;;AAqBA,eAAeV,OAAf","sourcesContent":["import React from 'react';\n\ntype ControlProps = {\n    label?: string;\n};\n\nconst control: React.FC<ControlProps> = (props) => {\n    let addIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        const updatedCount = oldCount + 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n    };\n\n    let removeIngredientHandler = (type) => {\n\n    };\n\n    return <>\n        <span>{props.label}</span>\n        <button>+</button>\n        <button>-</button>\n    </>\n};\n\nexport default control;"]},"metadata":{},"sourceType":"module"}