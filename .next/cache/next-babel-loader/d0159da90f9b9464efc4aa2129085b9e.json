{"ast":null,"code":"var _jsxFileName = \"/Users/nigel/Documents/Projects/drupal/universal/universal-web-component/src/components/RenderProps/Resource.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst makeCounter = Component => {\n  var _temp;\n\n  return _temp = class MakeCounter extends React.Component {\n    constructor(...args) {\n      super(...args);\n\n      _defineProperty(this, \"state\", {\n        value: 0\n      });\n\n      _defineProperty(this, \"increment\", () => {\n        this.setState(prevState => ({\n          value: prevState.value === this.props.maxValue ? prevState.value : prevState.value + 1\n        }));\n      });\n\n      _defineProperty(this, \"decrement\", () => {\n        this.setState(prevState => ({\n          value: prevState.value === this.props.minValue ? prevState.value : prevState.value - 1\n        }));\n      });\n    }\n\n    render() {\n      const _this$props = this.props,\n            {\n        minValue,\n        maxValue\n      } = _this$props,\n            props = _objectWithoutProperties(_this$props, [\"minValue\", \"maxValue\"]);\n\n      return __jsx(Component, _extends({}, props, {\n        value: this.state.value,\n        onIncrement: this.increment,\n        onDecrement: this.decrement,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }));\n    }\n\n  }, _temp;\n};","map":{"version":3,"sources":["/Users/nigel/Documents/Projects/drupal/universal/universal-web-component/src/components/RenderProps/Resource.tsx"],"names":["makeCounter","Component","MakeCounter","React","value","setState","prevState","props","maxValue","minValue","render","state","increment","decrement"],"mappings":";;;;;;;;;;;;AAeA,MAAMA,WAAW,GACbC,SADgB;AAAA;;AAAA,iBAGhB,MAAMC,WAAN,SAA0BC,KAAK,CAACF,SAAhC,CAGM;AAAA;AAAA;;AAAA,qCACwB;AACtBG,QAAAA,KAAK,EAAE;AADe,OADxB;;AAAA,yCAKU,MAAM;AACd,aAAKC,QAAL,CAAcC,SAAS,KAAK;AACxBF,UAAAA,KAAK,EACDE,SAAS,CAACF,KAAV,KAAoB,KAAKG,KAAL,CAAWC,QAA/B,GACMF,SAAS,CAACF,KADhB,GAEME,SAAS,CAACF,KAAV,GAAkB;AAJJ,SAAL,CAAvB;AAMH,OAZC;;AAAA,yCAcU,MAAM;AACd,aAAKC,QAAL,CAAcC,SAAS,KAAK;AACxBF,UAAAA,KAAK,EACDE,SAAS,CAACF,KAAV,KAAoB,KAAKG,KAAL,CAAWE,QAA/B,GACMH,SAAS,CAACF,KADhB,GAEME,SAAS,CAACF,KAAV,GAAkB;AAJJ,SAAL,CAAvB;AAMH,OArBC;AAAA;;AAuBFM,IAAAA,MAAM,GAAG;AACL,0BAAyC,KAAKH,KAA9C;AAAA,YAAM;AAAEE,QAAAA,QAAF;AAAYD,QAAAA;AAAZ,OAAN;AAAA,YAA+BD,KAA/B;;AACA,aACI,MAAC,SAAD,eACQA,KADR;AAEI,QAAA,KAAK,EAAE,KAAKI,KAAL,CAAWP,KAFtB;AAGI,QAAA,WAAW,EAAE,KAAKQ,SAHtB;AAII,QAAA,WAAW,EAAE,KAAKC,SAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ;AAQH;;AAjCC,GANU;AAAA,CAApB","sourcesContent":["export interface InjectedCounterProps {\n    value: number;\n    onIncrement(): void;\n    onDecrement(): void;\n}\n\ninterface MakeCounterProps {\n    minValue?: number;\n    maxValue?: number;\n}\n\ninterface MakeCounterState {\n    value: number;\n}\n\nconst makeCounter = <P extends InjectedCounterProps>(\n    Component: React.ComponentType<P>\n) =>\n    class MakeCounter extends React.Component<\n        Subtract<P, InjectedCounterProps> & MakeCounterProps,\n        MakeCounterState\n        > {\n        state: MakeCounterState = {\n            value: 0,\n        };\n\n        increment = () => {\n            this.setState(prevState => ({\n                value:\n                    prevState.value === this.props.maxValue\n                        ? prevState.value\n                        : prevState.value + 1,\n            }));\n        };\n\n        decrement = () => {\n            this.setState(prevState => ({\n                value:\n                    prevState.value === this.props.minValue\n                        ? prevState.value\n                        : prevState.value - 1,\n            }));\n        };\n\n        render() {\n            const { minValue, maxValue, ...props } = this.props;\n            return (\n                <Component\n                    {...props as P}\n                    value={this.state.value}\n                    onIncrement={this.increment}\n                    onDecrement={this.decrement}\n                />\n            );\n        }\n    };"]},"metadata":{},"sourceType":"script"}