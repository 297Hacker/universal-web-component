{"ast":null,"code":"var _jsxFileName = \"/Users/nigel/Documents/Projects/drupal/universal/universal-web-component/src/components/hoc/Counter/counter.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\n\nconst Counter = OriginalComponent => {\n  const {\n    0: count,\n    1: setCount\n  } = useState(0);\n\n  const incrementCount = () => {\n    return setCount(c => c + 1);\n  };\n\n  const decrementCount = () => {\n    return setCount(c => c - 1);\n  };\n\n  return wrappedComponent => __jsx(OriginalComponent, {\n    count: count,\n    incrementCount: incrementCount,\n    decrementCount: decrementCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, wrappedComponent);\n};\n\nexport default Counter;","map":{"version":3,"sources":["/Users/nigel/Documents/Projects/drupal/universal/universal-web-component/src/components/hoc/Counter/counter.tsx"],"names":["React","useState","Counter","OriginalComponent","count","setCount","incrementCount","c","decrementCount","wrappedComponent"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAaA,MAAMC,OAAO,GAAIC,iBAAD,IAA4B;AACxC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBJ,QAAQ,CAAC,CAAD,CAAlC;;AAEA,QAAMK,cAAc,GAAG,MAAM;AACzB,WAAOD,QAAQ,CAACE,CAAC,IAAIA,CAAC,GAAG,CAAV,CAAf;AACH,GAFD;;AAIA,QAAMC,cAAc,GAAG,MAAM;AACzB,WAAOH,QAAQ,CAACE,CAAC,IAAIA,CAAC,GAAG,CAAV,CAAf;AACH,GAFD;;AAIA,SAAQE,gBAAD,IACH,MAAC,iBAAD;AAAmB,IAAA,KAAK,EAAEL,KAA1B;AAAiC,IAAA,cAAc,EAAEE,cAAjD;AAAiE,IAAA,cAAc,EAAEE,cAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkGC,gBAAlG,CADJ;AAGH,CAdD;;AAgBA,eAAeP,OAAf","sourcesContent":["import React, {useState} from 'react';\n\ntype newCounterType = ({}) => {};\n\ntype incrementType = () => void;\ntype decrementType = () => void;\n\nexport type counterProps = {\n    count: number;\n    incrementCount: incrementType;\n    decrementCount: decrementType;\n}\n\nconst Counter = (OriginalComponent: any) => {\n    const [count, setCount] = useState(0);\n\n    const incrementCount = () => {\n        return setCount(c => c + 1);\n    };\n\n    const decrementCount = () => {\n        return setCount(c => c - 1);\n    };\n\n    return (wrappedComponent: newCounterType) => (\n        <OriginalComponent count={count} incrementCount={incrementCount} decrementCount={decrementCount}>{wrappedComponent}</OriginalComponent>\n    );\n};\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}