{"ast":null,"code":"var _jsxFileName = \"/Users/nigel/Documents/Projects/drupal/universal/universal-web-component/src/component/Button/Button.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\nconst MainButton = styled.button`\n  background-color: ${props => props.primary && `\n    background-color: ${props.theme.primary};\n  `}\n  ${props => props.transparent && `\n    background-color: ${props.theme.transparent};\n  `}\n  border-radius: 2px;\n  border: none;\n  color: #FFF;\n  margin: 0 10px;\n  padding: 10px 40px;\n\n    &:hover {\n        background-color: #000;\n        cursor: pointer;\n    }\n`;\nconst theme = {\n  primary: '#d0245a',\n  transparent: 'transparent',\n  cta: '#237c7e'\n};\n\nconst Button = props => {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }\n  }, __jsx(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(MainButton, _extends({}, props.transparent, {\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), props.children)));\n};\n\nexport default Button;","map":{"version":3,"sources":["/Users/nigel/Documents/Projects/drupal/universal/universal-web-component/src/component/Button/Button.tsx"],"names":["React","styled","ThemeProvider","MainButton","button","props","primary","theme","transparent","cta","Button","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAgBC,aAAhB,QAAoC,mBAApC;AAYA,MAAMC,UAAU,GAAGF,MAAM,CAACG,MAAO;sBACXC,KAAK,IAAIA,KAAK,CAACC,OAAN,IAAkB;wBACzBD,KAAK,CAACE,KAAN,CAAYD,OAAQ;GACxC;IACAD,KAAK,IAAIA,KAAK,CAACG,WAAN,IAAsB;wBACXH,KAAK,CAACE,KAAN,CAAYC,WAAY;GAC5C;;;;;;;;;;;CANJ;AAmBA,MAAMD,KAAK,GAAG;AACVD,EAAAA,OAAO,EAAE,SADC;AAEVE,EAAAA,WAAW,EAAE,aAFH;AAGVC,EAAAA,GAAG,EAAE;AAHK,CAAd;;AAMA,MAAMC,MAA6B,GAAIL,KAAD,IAAW;AAC7C,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEE,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD,eAAgBF,KAAK,CAACG,WAAtB;AAAmC,IAAA,SAAS,EAAC,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAqDH,KAAK,CAACM,QAA3D,CADJ,CADG,CAAP;AAKH,CAND;;AAQA,eAAeD,MAAf","sourcesContent":["import React from 'react';\nimport styled, {ThemeProvider} from 'styled-components';\n\ntype ButtonProps = {\n    class?: string,\n    color: string,\n    children: string,\n    type?: string,\n    primary: boolean,\n    transparent: boolean\n\n}\n\nconst MainButton = styled.button`\n  background-color: ${props => props.primary && `\n    background-color: ${props.theme.primary};\n  `}\n  ${props => props.transparent && `\n    background-color: ${props.theme.transparent};\n  `}\n  border-radius: 2px;\n  border: none;\n  color: #FFF;\n  margin: 0 10px;\n  padding: 10px 40px;\n\n    &:hover {\n        background-color: #000;\n        cursor: pointer;\n    }\n`;\n\nconst theme = {\n    primary: '#d0245a',\n    transparent: 'transparent',\n    cta: '#237c7e'\n};\n\nconst Button: React.FC<ButtonProps> = (props) => {\n    return <div>\n        <ThemeProvider theme={theme}>\n            <MainButton {...props.transparent} className=\"btn\" >{props.children}</MainButton>\n        </ThemeProvider>\n    </div>\n};\n\nexport default Button;"]},"metadata":{},"sourceType":"module"}