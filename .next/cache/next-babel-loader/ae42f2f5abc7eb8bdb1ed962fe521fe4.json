{"ast":null,"code":"var _jsxFileName = \"/Users/nigel/Documents/Projects/drupal/universal/universal-web-component/src/components/InputField/InputField.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nconst Input = styled.input.withConfig({\n  displayName: \"InputField__Input\",\n  componentId: \"sc-3hn3ct-0\"\n})([\"border:1px solid #eee;border-radius:3px;font-size:16px;margin:10px 10px 10px 0;padding:10px 5px;outline:none;width:250px;\"]);\n\nconst InputField = props => {\n  const {\n    0: input,\n    1: setInput\n  } = useState(''); // values for setting up warning length and input length\n\n  const lengthWarning = 15;\n  const lengthMax = 20;\n  let warningText = false;\n\n  const handleChange = e => {\n    setInput(e.target.value);\n\n    if (e.target.value.length == lengthWarning) {\n      warningText = true;\n    }\n  };\n\n  const handleBlur = () => {};\n\n  useEffect(() => {\n    console.log('input changed!');\n  }, [input]); // const onKeyUp = (target, e) => {\n  //     if(e.keyCode === 13){\n  //         swith(target) {\n  //             case {props.name}:\n  //             {this.props.name}\n  //         }\n  //     }\n  // };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }\n  }, __jsx(Input, {\n    maxLength: lengthMax,\n    name: props.name,\n    value: input,\n    type: props.type,\n    placeholder: props.placeholder,\n    onChange: e => handleChange(e),\n    onBlur: () => handleBlur(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, input));\n};\n\nInputField.defaultProps = {\n  name: 'input name',\n  type: 'name',\n  placeholder: 'Name'\n};\nexport default InputField;","map":{"version":3,"sources":["/Users/nigel/Documents/Projects/drupal/universal/universal-web-component/src/components/InputField/InputField.tsx"],"names":["React","useState","useEffect","styled","Input","input","InputField","props","setInput","lengthWarning","lengthMax","warningText","handleChange","e","target","value","length","handleBlur","console","log","name","type","placeholder","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAUA,MAAMC,KAAK,GAAGD,MAAM,CAACE,KAAV;AAAA;AAAA;AAAA,iIAAX;;AAUA,MAAMC,UAAoC,GAAIC,KAAD,IAAW;AACpD,QAAM;AAAA,OAACF,KAAD;AAAA,OAAQG;AAAR,MAAoBP,QAAQ,CAAC,EAAD,CAAlC,CADoD,CAGpD;;AACA,QAAMQ,aAAoB,GAAG,EAA7B;AACA,QAAMC,SAAgB,GAAG,EAAzB;AACA,MAAIC,WAAmB,GAAG,KAA1B;;AAEA,QAAMC,YAAY,GAAIC,CAAD,IAAY;AAC7BL,IAAAA,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;;AACA,QAAIF,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,MAAf,IAAyBP,aAA7B,EAA4C;AACxCE,MAAAA,WAAW,GAAG,IAAd;AACH;AACJ,GALD;;AAOA,QAAMM,UAAU,GAAG,MAAM,CAExB,CAFD;;AAIAf,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH,GAFQ,EAEN,CAACd,KAAD,CAFM,CAAT,CAnBoD,CAuBpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAO,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,KAAD;AAAO,IAAA,SAAS,EAAEK,SAAlB;AAA6B,IAAA,IAAI,EAAEH,KAAK,CAACa,IAAzC;AAA+C,IAAA,KAAK,EAAEf,KAAtD;AACO,IAAA,IAAI,EAAEE,KAAK,CAACc,IADnB;AACyB,IAAA,WAAW,EAAEd,KAAK,CAACe,WAD5C;AAEO,IAAA,QAAQ,EAAET,CAAC,IAAID,YAAY,CAACC,CAAD,CAFlC;AAEuC,IAAA,MAAM,EAAE,MAAMI,UAAU,EAF/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAKH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOZ,KAAP,CALG,CAAP;AAOH,CAvCD;;AAyCAC,UAAU,CAACiB,YAAX,GAA0B;AACtBH,EAAAA,IAAI,EAAE,YADgB;AAEtBC,EAAAA,IAAI,EAAE,MAFgB;AAGtBC,EAAAA,WAAW,EAAE;AAHS,CAA1B;AAMA,eAAehB,UAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport styled from 'styled-components';\n\ntype InputFieldType = {\n    name: string\n    type: string\n    input?: string\n    placeholder?: string\n    value?: string\n}\n\nconst Input = styled.input`\n    border: 1px solid #eee;\n    border-radius: 3px;\n    font-size: 16px;\n    margin: 10px 10px 10px 0;\n    padding: 10px 5px;\n    outline: none;\n    width: 250px;\n`;\n\nconst InputField: React.FC<InputFieldType> = (props) => {\n    const [input, setInput] = useState('');\n\n    // values for setting up warning length and input length\n    const lengthWarning:number = 15;\n    const lengthMax:number = 20;\n    let warningText:boolean = false;\n\n    const handleChange = (e: any) => {\n        setInput(e.target.value);\n        if (e.target.value.length == lengthWarning) {\n            warningText = true;\n        }\n    };\n\n    const handleBlur = () => {\n\n    };\n\n    useEffect(() => {\n        console.log('input changed!');\n    }, [input]);\n\n    // const onKeyUp = (target, e) => {\n    //     if(e.keyCode === 13){\n    //         swith(target) {\n    //             case {props.name}:\n    //             {this.props.name}\n    //         }\n    //     }\n    // };\n\n    return <React.Fragment>\n            <Input maxLength={lengthMax} name={props.name} value={input}\n                   type={props.type} placeholder={props.placeholder}\n                   onChange={e => handleChange(e)} onBlur={() => handleBlur()}\n            />\n        <span>{input}</span>\n    </React.Fragment>\n};\n\nInputField.defaultProps = {\n    name: 'input name',\n    type: 'name',\n    placeholder: 'Name'\n};\n\nexport default InputField;\n"]},"metadata":{},"sourceType":"module"}