{"ast":null,"code":"var _jsxFileName = \"/Users/nigel/Documents/MyDocuments/Projects/drupal/universal/universal-web-component/src/components/Pizza/ingredients/ingredients.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nexport const Ingredients = props => {\n  let ingredients = {};\n\n  switch (props.type) {\n    case 'crust':\n      ingredients = __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 27\n        }\n      }, \"Italian Crust\");\n      break;\n\n    case 'sauce':\n      ingredients = __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 27\n        }\n      }, \"Sauce\");\n      break;\n\n    case 'ham':\n      ingredients = __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 27\n        }\n      }, \"Ham\");\n      break;\n\n    case 'cheese':\n      ingredients = __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 27\n        }\n      }, \"Cheese\");\n      break;\n\n    case 'pepperoni':\n      ingredients = __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 27\n        }\n      }, \"Pepperoni\");\n      break;\n\n    case 'mushroom':\n      ingredients = __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 27\n        }\n      }, \"Mushroom\");\n      break;\n\n    default:\n      ingredients = {};\n  }\n\n  return __jsx(React.Fragment, null, ingredients);\n};","map":{"version":3,"sources":["/Users/nigel/Documents/MyDocuments/Projects/drupal/universal/universal-web-component/src/components/Pizza/ingredients/ingredients.tsx"],"names":["React","Ingredients","props","ingredients","type"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAMA,OAAO,MAAMC,WAAsC,GAAIC,KAAD,IAAW;AAC7D,MAAIC,WAAW,GAAG,EAAlB;;AAEA,UAAQD,KAAK,CAACE,IAAd;AACI,SAAK,OAAL;AACID,MAAAA,WAAW,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAd;AACA;;AACJ,SAAK,OAAL;AACIA,MAAAA,WAAW,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAd;AACA;;AACJ,SAAK,KAAL;AACIA,MAAAA,WAAW,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAd;AACA;;AACJ,SAAK,QAAL;AACIA,MAAAA,WAAW,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAd;AACA;;AACJ,SAAK,WAAL;AACIA,MAAAA,WAAW,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAd;AACA;;AACJ,SAAK,UAAL;AACIA,MAAAA,WAAW,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAd;AACA;;AACJ;AACIA,MAAAA,WAAW,GAAG,EAAd;AApBR;;AAsBA,SAAO,4BACFA,WADE,CAAP;AAGH,CA5BM","sourcesContent":["import React from 'react';\n\nexport interface ingredientProps {\n    type: string\n}\n\nexport const Ingredients: React.FC<ingredientProps> = (props) => {\n    let ingredients = {};\n\n    switch (props.type) {\n        case('crust'):\n            ingredients = <div>Italian Crust</div>;\n            break;\n        case('sauce'):\n            ingredients = <div>Sauce</div>;\n            break;\n        case('ham'):\n            ingredients = <div>Ham</div>;\n            break;\n        case('cheese'):\n            ingredients = <div>Cheese</div>;\n            break;\n        case('pepperoni'):\n            ingredients = <div>Pepperoni</div>;\n            break;\n        case('mushroom'):\n            ingredients = <div>Mushroom</div>;\n            break;\n        default:\n            ingredients = {};\n    }\n    return <>\n        {ingredients}\n    </>\n};"]},"metadata":{},"sourceType":"module"}