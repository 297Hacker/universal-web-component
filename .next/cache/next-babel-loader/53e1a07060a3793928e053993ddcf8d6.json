{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nconst BlockquoteContent = styled.blockquote.withConfig({\n  displayName: \"Blockquote__BlockquoteContent\",\n  componentId: \"sc-1sdx0kz-0\"\n})([\"float:left;font-size:42px;font-style:italic;line-height:42px;margin:10px auto;text-align:center;width:calc(100% - 40px);&:after{content:'\\\"'; } &:before { content: '\\\"';}\"]);\n\nconst Blockquote = props => {\n  let curContent;\n\n  if (props.children) {\n    curContent = __jsx(React.Fragment, null, props.children);\n  } else {\n    curContent = __jsx(React.Fragment, null, props.content);\n  }\n\n  return {\n    curContent\n  };\n};\n\nBlockquote.defaultProps = {\n  content: 'Blockquote content'\n};\nexport default Blockquote;","map":{"version":3,"sources":["/Users/nigel/Documents/Projects/drupal/universal/universal-web-component/src/components/Blockquote/Blockquote.tsx"],"names":["React","styled","BlockquoteContent","blockquote","Blockquote","props","curContent","children","content","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAMA,MAAMC,iBAAiB,GAAGD,MAAM,CAACE,UAAV;AAAA;AAAA;AAAA,kLAAvB;;AAiBA,MAAMC,UAAqC,GAAIC,KAAD,IAAW;AACrD,MAAIC,UAAJ;;AACI,MAAID,KAAK,CAACE,QAAV,EAAoB;AAChBD,IAAAA,UAAU,GAAG,4BAAGD,KAAK,CAACE,QAAT,CAAb;AACH,GAFD,MAEO;AACHD,IAAAA,UAAU,GAAG,4BAAGD,KAAK,CAACG,OAAT,CAAb;AACH;;AAEL,SAAO;AAACF,IAAAA;AAAD,GAAP;AACH,CATD;;AAWAF,UAAU,CAACK,YAAX,GAA0B;AACtBD,EAAAA,OAAO,EAAE;AADa,CAA1B;AAIA,eAAeJ,UAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\ntype blockQuoteProps = {\n    content?: string\n}\n\nconst BlockquoteContent = styled.blockquote`\n    float: left;\n    font-size: 42px;\n    font-style: italic;\n    line-height: 42px;\n    margin: 10px auto;\n    text-align: center;\n    width: calc(100% - 40px);\n    \n    &:after {\n        content: '\"';\n    }\n    &:before {\n        content: '\"';\n    }\n`;\n\nconst Blockquote: React.FC<blockQuoteProps> = (props) => {\n    let curContent;\n        if (props.children) {\n            curContent = <>{props.children}</>;\n        } else {\n            curContent = <>{props.content}</>;\n        }\n\n    return {curContent}\n};\n\nBlockquote.defaultProps = {\n    content: 'Blockquote content'\n};\n\nexport default Blockquote;"]},"metadata":{},"sourceType":"module"}