{"ast":null,"code":"var _s2 = $RefreshSig$();\n\nvar _jsxFileName = \"/Users/nigel/Documents/Projects/drupal/universal/universal-web-component/src/components/Button/Button.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\nconst theme = {\n  colors: {\n    primary: `yellow`,\n    secondary: `red`\n  }\n};\nconst MainButton = styled.button.withConfig({\n  displayName: \"Button__MainButton\",\n  componentId: \"sc-1ehievh-0\"\n})([\"background-color:\", \";border-radius:2px;border:none;color:#FFF;margin:0 10px;padding:10px 40px;&:hover{background-color:#000;cursor:pointer;}\"], props => props.theme.colors.primary);\n_c = MainButton;\n\nconst Button = props => {\n  _s2();\n\n  _s();\n\n  [addClass, setClass] = useState('');\n\n  const buttonClick = () => {\n    setClass(props.class).push('red');\n  };\n\n  return __jsx(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, __jsx(MainButton, {\n    className: addClass,\n    name: props.name,\n    value: props.value,\n    onClick: buttonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, props.children));\n};\n\n_s2(Button, \"v2x6wirwKCy++9DuW8s383qRkbI=\");\n\n_c3 = Button;\n\n_s(Button, \"v2x6wirwKCy++9DuW8s383qRkbI=\");\n\n_c2 = Button;\nButton.defaultProps = {\n  name: 'button',\n  value: 'Click',\n  children: 'Click button'\n};\nexport default Button;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MainButton\");\n$RefreshReg$(_c2, \"Button\");\n\nvar _c3;\n\n$RefreshReg$(_c3, \"Button\");","map":{"version":3,"sources":["/Users/nigel/Documents/Projects/drupal/universal/universal-web-component/src/components/Button/Button.tsx"],"names":["theme","colors","primary","secondary","MainButton","styled","props","Button","useState","buttonClick","setClass","name","value","children"],"mappings":";;;;;;AAAA,OAAA,KAAA,IAAA,QAAA,QAAA,OAAA;AACA,OAAA,MAAA,IAAA,aAAA,QAAA,mBAAA;AAEA,MAAMA,KAAK,GAAG;AACVC,EAAAA,MAAM,EAAE;AACJC,IAAAA,OAAO,EADH,QAAA;AAEJC,IAAAA,SAAS,EAAG;AAFR;AADE,CAAd;AAiBA,MAAMC,UAAU,GAAGC,MAAM,CAAT,MAAGA,CAAH,UAAGA,CAAH;AAAA,EAAA,WAAA,EAAA,oBAAA;AAAA,EAAA,WAAA,EAAA;AAAA,CAAGA,EAAH,CAAA,mBAAA,EAAA,0HAAA,CAAGA,EACGC,KAAK,IAAIA,KAAK,CAALA,KAAAA,CAAAA,MAAAA,CAD/B,OAAmBD,CAAnB;KAAMD,U;;AAcN,MAAMG,MAA6B,GAAID,KAAD,IAAW;AAAA;;AAAA,EAAA,EAAA;;AAC7C,GAAA,QAAA,EAAA,QAAA,IAAuBE,QAAQ,CAA/B,EAA+B,CAA/B;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACtBC,IAAAA,QAAQ,CAACJ,KAAK,CAAdI,KAAQ,CAARA,CAAAA,IAAAA,CAAAA,KAAAA;AADJ,GAAA;;AAIA,SAAM,KAAA,CAAA,aAAA,EAAA;AAAe,IAAA,KAAK,EAApB,KAAA;AAAA,IAAA,MAAA,EAAA,IAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EACF,KAAA,CAAA,UAAA,EAAA;AAAY,IAAA,SAAS,EAArB,QAAA;AAAiC,IAAA,IAAI,EAAEJ,KAAK,CAA5C,IAAA;AAAmD,IAAA,KAAK,EAAEA,KAAK,CAA/D,KAAA;AAAuE,IAAA,OAAO,EAA9E,WAAA;AAAA,IAAA,MAAA,EAAA,IAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EAA8FA,KAAK,CADvG,QACI,CADE,CAAN;AAPJ,CAAA;;IAAMC,M;;MAAAA,M;;GAAAA,M;;MAAAA,M;AAYNA,MAAM,CAANA,YAAAA,GAAsB;AAClBI,EAAAA,IAAI,EADc,QAAA;AAElBC,EAAAA,KAAK,EAFa,OAAA;AAGlBC,EAAAA,QAAQ,EAAE;AAHQ,CAAtBN;AAMA,eAAA,MAAA","sourcesContent":["import React, {useState} from 'react';\nimport styled, {ThemeProvider} from 'styled-components';\n\nconst theme = {\n    colors: {\n        primary: `yellow`,\n        secondary: `red`,\n    }\n};\n\ntype ButtonProps = {\n    addClass: string\n    class?: string\n    name?: string\n    children?: string\n    value?: string\n    onclick?: {}\n    kind?: string[]\n}\n\nconst MainButton = styled.button`\n  background-color: ${props => props.theme.colors.primary};\n  border-radius: 2px;\n  border: none;\n  color: #FFF;\n  margin: 0 10px;\n  padding: 10px 40px;\n\n    &:hover {\n        background-color: #000;\n        cursor: pointer;\n    }\n`;\n\nconst Button: React.FC<ButtonProps> = (props) => {\n    [addClass, setClass] = useState('');\n\n    const buttonClick = () => {\n        setClass(props.class).push('red');\n    };\n\n    return<ThemeProvider theme={theme}>\n        <MainButton className={addClass} name={props.name} value={props.value} onClick={buttonClick}>{props.children}</MainButton>\n    </ThemeProvider>\n};\n\nButton.defaultProps = {\n    name: 'button',\n    value: 'Click',\n    children: 'Click button'\n};\n\nexport default Button;"]},"metadata":{},"sourceType":"module"}