{"ast":null,"code":"var _jsxFileName = \"/Users/nigel/Documents/Projects/drupal/universal/universal-web-component/src/components/InputField/InputField.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nconst Input = styled.input.withConfig({\n  displayName: \"InputField__Input\",\n  componentId: \"sc-3hn3ct-0\"\n})([\"border:1px solid #eee;border-radius:3px;font-size:16px;margin:10px 10px 10px 0;padding:10px 5px;outline:none;width:250px;\"]);\n_c = Input;\n\nconst InputField = props => {\n  _s();\n\n  const {\n    0: input,\n    1: setInput\n  } = useState({});\n  const lengthMax = props.maxValue;\n  const lengthWarning = 15;\n  let warningText = \"\";\n\n  const handleChange = e => {\n    setInput(e.target.value);\n\n    if (e.target.value.length > lengthWarning && e.target.value.length <= lengthMax) {\n      console.log('length check');\n      warningText = __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 27\n        }\n      }, \"max text length is almost reached\");\n    } else {\n      console.log('warning check');\n      warningText = __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 27\n        }\n      }, \" \");\n    }\n  };\n\n  const handleBlur = () => {};\n\n  return __jsx(React.Fragment, null, __jsx(Input, {\n    maxLength: props.maxValue,\n    name: props.name,\n    value: input,\n    type: props.type,\n    placeholder: props.placeholder,\n    onChange: e => handleChange(e),\n    onBlur: () => handleBlur(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), warningText);\n};\n\n_s(InputField, \"er8wFUVfvyuUKi52Y0K9Vyiszno=\");\n\n_c2 = InputField;\nInputField.defaultProps = {\n  name: 'input name',\n  type: 'name',\n  maxValue: 20,\n  placeholder: 'Name'\n};\nexport default InputField;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Input\");\n$RefreshReg$(_c2, \"InputField\");","map":{"version":3,"sources":["/Users/nigel/Documents/Projects/drupal/universal/universal-web-component/src/components/InputField/InputField.tsx"],"names":["React","useState","styled","Input","input","InputField","props","setInput","lengthMax","maxValue","lengthWarning","warningText","handleChange","e","target","value","length","console","log","handleBlur","name","type","placeholder","defaultProps"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAWA,MAAMC,KAAK,GAAGD,MAAM,CAACE,KAAV;AAAA;AAAA;AAAA,iIAAX;KAAMD,K;;AAUN,MAAME,UAAoC,GAAIC,KAAD,IAAW;AAAA;;AACpD,QAAM;AAAA,OAACF,KAAD;AAAA,OAAQG;AAAR,MAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMO,SAAiB,GAAGF,KAAK,CAACG,QAAhC;AACA,QAAMC,aAAqB,GAAG,EAA9B;AACA,MAAIC,WAAe,GAAG,EAAtB;;AAEA,QAAMC,YAAY,GAAIC,CAAD,IAAY;AAC7BN,IAAAA,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;;AACA,QAAIF,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,MAAf,GAAwBN,aAAxB,IAAyCG,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,MAAf,IAAyBR,SAAtE,EAAiF;AAC7ES,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAP,MAAAA,WAAW,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAAd;AACH,KAHD,MAGO;AACHM,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAP,MAAAA,WAAW,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAd;AACH;AACJ,GATD;;AAWA,QAAMQ,UAAU,GAAG,MAAM,CACxB,CADD;;AAGA,SAAO,4BACH,MAAC,KAAD;AAAO,IAAA,SAAS,EAAEb,KAAK,CAACG,QAAxB;AAAkC,IAAA,IAAI,EAAEH,KAAK,CAACc,IAA9C;AAAoD,IAAA,KAAK,EAAEhB,KAA3D;AACO,IAAA,IAAI,EAAEE,KAAK,CAACe,IADnB;AACyB,IAAA,WAAW,EAAEf,KAAK,CAACgB,WAD5C;AAEO,IAAA,QAAQ,EAAET,CAAC,IAAID,YAAY,CAACC,CAAD,CAFlC;AAEuC,IAAA,MAAM,EAAE,MAAMM,UAAU,EAF/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,EAKFR,WALE,CAAP;AAOH,CA3BD;;GAAMN,U;;MAAAA,U;AA6BNA,UAAU,CAACkB,YAAX,GAA0B;AACtBH,EAAAA,IAAI,EAAE,YADgB;AAEtBC,EAAAA,IAAI,EAAE,MAFgB;AAGtBZ,EAAAA,QAAQ,EAAE,EAHY;AAItBa,EAAAA,WAAW,EAAE;AAJS,CAA1B;AAOA,eAAejB,UAAf","sourcesContent":["import React, {useState} from 'react';\nimport styled from 'styled-components';\n\ntype InputFieldType = {\n    name: string\n    type: string\n    input?: string\n    placeholder?: string\n    maxValue: number\n    value?: string\n}\n\nconst Input = styled.input`\n    border: 1px solid #eee;\n    border-radius: 3px;\n    font-size: 16px;\n    margin: 10px 10px 10px 0;\n    padding: 10px 5px;\n    outline: none;\n    width: 250px;\n`;\n\nconst InputField: React.FC<InputFieldType> = (props) => {\n    const [input, setInput] = useState({});\n    const lengthMax: number = props.maxValue;\n    const lengthWarning: number = 15;\n    let warningText: {} = \"\";\n\n    const handleChange = (e: any) => {\n        setInput(e.target.value);\n        if (e.target.value.length > lengthWarning && e.target.value.length <= lengthMax) {\n            console.log('length check');\n            warningText = <span>max text length is almost reached</span>;\n        } else {\n            console.log('warning check');\n            warningText = <span> </span>;\n        }\n    };\n\n    const handleBlur = () => {\n    };\n\n    return <>\n        <Input maxLength={props.maxValue} name={props.name} value={input}\n               type={props.type} placeholder={props.placeholder}\n               onChange={e => handleChange(e)} onBlur={() => handleBlur()}\n        />\n        {warningText}\n    </>;\n};\n\nInputField.defaultProps = {\n    name: 'input name',\n    type: 'name',\n    maxValue: 20,\n    placeholder: 'Name'\n};\n\nexport default InputField;\n"]},"metadata":{},"sourceType":"module"}